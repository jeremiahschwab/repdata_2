plot2()
source("exploratory_project_2/plot3.R")
plot3()
source("exploratory_project_2/plot3.R")
plot3()
source("exploratory_project_2/plot4.R")
plot4()
source("exploratory_project_2/plot5.R")
plot5()
source("exploratory_project_2/plot5.R")
plot5()
source("exploratory_project_2/plot5.R")
plot5()
source("exploratory_project_2/plot6.R")
plot6()
source("exploratory_project_2/plot3.R")
plot3()
source("exploratory_project_2/plot3.R")
source("exploratory_project_2/plot3.R")
plot3()
source("exploratory_project_2/plot3.R")
plot3()
source("exploratory_project_2/plot3.R")
plot3()
source("exploratory_project_2/plot3.R")
plot3()
source("exploratory_project_2/plot6.R")
plot6()
data <- read.delim(file = "vast.tsv")
data <- read.delim(file = "vast.tsv", nrows = 10000)
install.packages("bigmemory.sri")
install.packages("ff")
library(ff)
x <- read.big.matrix("cast.tsv", type="character", header = TRUE)
library(biganalytics)
install.packages("biganalytics")
library(bigmemory)
library(bigmemory.sri)
x <- read.big.matrix("cast.tsv", type="character", header = TRUE)
data <- read.delim(file = "vast.tsv", nrows = 2000000, colClasses = "character")
data <- read.delim(file = "vast.tsv", nrows = 2000000, colClasses = c(NULL,"character",rep(NULL,42))
rep(NULL,42)
rep(NULL,42)
rep("NULL"",42)
rep("NULL"",42)
rep("NULL",42)
data <- read.delim(file = "vast.tsv", nrows = 2000000, colClasses = c(NULL,"character",rep("NULL",42)))
data <- read.delim(file = "vast.tsv", nrows = 1000, colClasses = c(NULL,"character",rep("NULL",42)))
View(data)
data <- read.delim(file = "vast.tsv", nrows = 1000, colClasses = c("NULL","character",rep("NULL",42)))
View(data)
data <- read.delim(file = "vast.tsv", nrows = 10000, colClasses = c("NULL","character",rep("NULL",42)))
fread()
library(data.table)
fread()
data <- fread("vast.tsv",sep = "\t", header = TRUE,colClasses = c("NULL","character",rep("NULL",42)))
View(data)
data <- fread("vast.tsv",sep = "\t", header = TRUE)
data <- fread("vast.tsv",sep = "\t", header = TRUE,nrows = 10)
library(bit64)
install.packages("bit64")
library(bit64)
View(data)
data <- fread("vast.tsv",sep = "\t", header = TRUE,colClasses = c("NULL","character",rep("NULL",8),"integer",rep("NULL",33)))
View(data)
install.packages("knitr")
activitydata <- read.csv("/RepData_PeerAssessment1/activity.csv")
activitydata <- read.csv("RepData_PeerAssessment1/activity.csv")
View(activitydata)
library(base)
library(reshape2)
library(ggplot2)
melted_data <- melt(combined_data, id=c("date"), measure = "steps")
melted_data <- melt(activitydata, id=c("date"), measure = "steps")
casted_data <- dcast(melted_data, date ~ variable, sum)
View(casted_data)
casted_data[is.na(casted_data$steps),] <- NULL
is.na(casted_data$steps)
casted_data[is.na(casted_data$steps),]
casted_data[is.na(casted_data$steps),] <- NA
View(casted_data)
casted_data[!is.na(casted_data$steps),]
subset_data <- casted_data[!is.na(casted_data$steps),]
View(subset_data)
melteddata <- melt(activitydata, id=c("date"), measure = "steps")
casteddata <- dcast(melteddata, date ~ variable, sum)
subsetdata <- casteddata[!is.na(casteddata$steps),]
plot(subsetdata$date, subsetdata$steps, type = "h", col = "cyan",
ylab = "Steps", xlab = "Date", main = "Total # of Steps per Day")
plot(subsetdata$date, subsetdata$steps, col = "cyan",
ylab = "Steps", xlab = "Date", main = "Total # of Steps per Day")
plot(subsetdata$date, subsetdata$steps, type = "h", col = "cyan",
ylab = "Steps", xlab = "Date", main = "Total # of Steps per Day",lwd=20)
plot(subsetdata$date, subsetdata$steps, type = "h", col = "cyan",
ylab = "Steps", xlab = "Date", main = "Total # of Steps per Day",lwd=5)
plot(subsetdata$date, subsetdata$steps, type = "h", col = "cyan",
ylab = "Steps", xlab = "Date", main = "Total # of Steps per Day",lwd=2)
plot(subsetdata$date, subsetdata$steps, type = "h", col = "cyan",
ylab = "Steps", xlab = "Date", main = "Total # of Steps per Day",lwd=3)
plot(subsetdata$date, subsetdata$steps, type = "h", col = "cyan",
ylab = "Steps", xlab = "Date", main = "Total # of Steps per Day",lwd=3,lty=1)
plot(subsetdata$date, subsetdata$steps, type = "h", col = "cyan",
ylab = "Steps", xlab = "Date", main = "Total # of Steps per Day",lwd=3,lty=2)
plot(subsetdata$date, subsetdata$steps, type = "h", col = "cyan",
ylab = "Steps", xlab = "Date", main = "Total # of Steps per Day",lwd=3,lty=4)
plot(subsetdata$date, subsetdata$steps, type = "h", col = "cyan",
ylab = "Steps", xlab = "Date", main = "Total # of Steps per Day",lwd=3,fill = TRUE)
hist(subsetdata$date, freq = subsetdata$steps, col = "cyan",
ylab = "Steps", xlab = "Date", main = "Total # of Steps per Day",lwd=3,fill = TRUE)
hist(subsetdata)
hist(subsetdata$steps)
hist(subsetdata$date)
abline(v = mean(subsetdata$steps),
col = "royalblue",
lwd = 2)
abline(v = median(subsetdata$steps),
col = "red",
lwd = 2)
meansubset <- mean(subsetdata$steps)
mediansubset <- median(subsetdata$steps)
abline(v = mean(subsetdata$steps),
col = "royalblue",
lwd = 1)
abline(v = median(subsetdata$steps),
col = "red",
lwd = 1)
hist(subsetdata$steps, col=cyan)
hist(subsetdata$steps, col="cyan")
hist(subsetdata$steps, col="cyan",main = "Total Steps Per Day Historgram",xlab = "Total Steps Per Day")
hist(subsetdata$steps, col="cyan",main = "Total Steps Per Day Histogram",xlab = "Total Steps Per Day")
mean(subsetdata$steps)
median(subsetdata$steps)
View(activitydata)
melteddata <- melt(activitydata, id=c("interval"), measure = "steps")
casteddata <- dcast(melteddata, interval ~ variable, mean)
plot(casteddata$interval,casteddate$steps,type = "l")
melteddata <- melt(activitydata, id=c("interval"), measure = "steps")
casteddata <- dcast(melteddata, interval ~ variable, mean)
plot(casteddata$interval,casteddata$steps,type = "l")
View(casted_data)
melteddata <- melt(activitydata, id=c("interval"), measure = "steps")
casteddata <- dcast(melteddata, interval ~ variable, mean)
subsetdata <- casteddata[!is.na(casteddata$steps),]
plot(subsetdata$interval,subsetdata$steps,type = "l")
View(subsetdata)
melteddata <- melt(activitydata, id=c("interval"), measure = "steps")
casteddata <- dcast(melteddata, interval ~ variable, mean)
View(casteddata)
subsetdata <- activitydata[!is.na(activitydata$steps),]
melteddata <- melt(subsetdata, id=c("date"), measure = "steps")
casteddata <- dcast(melteddata, date ~ variable, sum)
hist(casteddata$steps, col="cyan",main = "Total Steps Per Day Histogram",xlab = "Total Steps Per Day")
View(subsetdata)
melteddata <- melt(subsetdata, id=c("interval"), measure = "steps")
casteddata <- dcast(melteddata, interval ~ variable, mean)
View(casteddata)
plot(casteddata$interval,casteddata$steps,type = "l")
View(casteddata)
casteddata[casteddata$steps == max(casteddata$steps),interval]
View(casteddata)
casteddata[casteddata$steps == max(casteddata$steps),]$interval
casteddata[casteddata$steps == max(casteddata$steps),]$interval
plot(casteddata$interval,casteddata$steps,type = "l",xlab = "Time Interval", ylab = "Average Steps Across All Days",main = "Average Steps Per Time Interval Across All Days")
plot(casteddata$interval,casteddata$steps,col = "red",type = "l",xlab = "Time Interval", ylab = "Average Steps Across All Days",main = "Average Steps Per Time Interval Across All Days")
plot(casteddata$interval,casteddata$steps,type = "l",xlab = "Time Interval", ylab = "Average Steps Across All Days",main = "Average Steps Per Time Interval Across All Days")
casteddata[casteddata$steps == max(casteddata$steps),]$interval
subsetdata <- activitydata[is.na(activitydata$steps),]
nrows(subsetdata)
subsetdata <- activitydata[is.na(activitydata$steps),]
nrow(subsetdata)
View(subsetdata)
filleddata <- activitydata[!is.na(activitydata$steps),]
meltedtotaldata <- melt(filleddata, id=c("date"), measure = "steps")
castedtotaldata <- dcast(meltedtotaldata, date ~ variable, sum)
hist(castedtotaldata$steps, col="cyan",main = "Total Steps Per Day Histogram",xlab = "Total Steps Per Day")
mean(castedtotaldata$steps)
median(castedtotaldata$steps)
meltedaveragedata <- melt(filleddata, id=c("interval"), measure = "steps")
castedaveragedata <- dcast(meltedaveragedata, interval ~ variable, mean)
plot(castedaveragedata$interval,castedaveragedata$steps,type = "l",xlab = "Time Interval", ylab = "Average Steps Across All Days",main = "Average Steps Across All Days Per Time Interval")
castedaveragedata[castedaveragedata$steps == max(castedaveragedata$steps),]$interval
missingdata <- activitydata[is.na(activitydata$steps),]
nrow(missingdata)
View(castedaveragedata)
missingdata$steps <- castedaveragedata[castedaveragedata$interval == missingdata$interval]$steps
missingdata$steps <- castedaveragedata[castedaveragedata$interval == missingdata$interval,]$steps
View(missingdata)
missingdata <- activitydata[is.na(activitydata$steps),]
View(missingdata)
missingdata$steps <- castedaveragedata[castedaveragedata$interval == missingdata$interval,]$steps
View(missingdata)
missingdata[is.na(missingdata$steps,]$steps <- castedaveragedata[castedaveragedata$interval == missingdata$interval,]$steps
missingdata[is.na(missingdata$steps),]$steps <- castedaveragedata[castedaveragedata$interval == missingdata$interval,]$steps
missingdata <- activitydata[is.na(activitydata$steps),]
nrow(missingdata)
missingdata[is.na(missingdata$steps),]$steps <- castedaveragedata[castedaveragedata$interval == missingdata$interval,]$steps
View(missingdata)
View(castedaveragedata)
missingdata <- activitydata[is.na(activitydata$steps),]
for (i in 1:nrow(missingdata)) {
missingdata[steps,i] <- castedaveragedata[castedaveragedata$interval == missingdata[interval,i],]$steps
}
for (i in 1:nrow(missingdata)) {
missingdata[steps,i] <- castedaveragedata[castedaveragedata$interval == missingdata[,i]$interval,]$steps
}
for (i in 1:nrow(missingdata)) {
missingdata[steps,i] <- castedaveragedata[castedaveragedata$interval == missingdata["interval",i],]$steps
}
for (i in 1:nrow(missingdata)) {
missingdata["steps",i] <- castedaveragedata[castedaveragedata$interval == missingdata["interval",i],]$steps
}
castedaveragedata[castedaveragedata$interval == missingdata["interval",1],]$steps
View(castedaveragedata)
castedaveragedata[castedaveragedata$interval == missingdata["interval",1],]
View(castedaveragedata)
test <- castedaveragedata[castedaveragedata$interval == missingdata["interval",1],]
test <- castedaveragedata[,]
View(test)
test <- castedaveragedata[,castedaveragedata$interval == missingdata["interval",1]]
test <- castedaveragedata[castedaveragedata$interval == missingdata["interval",1],]
View(test)
missingdata["interval",1]
View(missingdata)
missingdata[1,"interval"]
for (i in 1:nrow(missingdata)) {
missingdata[i,"steps"] <- castedaveragedata[castedaveragedata$interval == missingdata[i,"interval"],]$steps
}
View(missingdata)
missingdata <- activitydata[is.na(activitydata$steps),]
nrow(missingdata)
enhanceddata <- missingdata
for (i in 1:nrow(missingdata)) {
enhanceddata[i,"steps"] <- castedaveragedata[castedaveragedata$interval == enhanceddata[i,"interval"],]$steps
}
View(enhanceddata)
combineddata <- rbind(enhanceddata,filleddata)
View(combineddata)
activitydata <- read.csv("/RepData_PeerAssessment1/activity.csv")
## Melt and cast data to get Emissions per year by Location
completedata <- activitydata[!is.na(activitydata$steps),]
meltedtotaldata <- melt(completedata, id=c("date"), measure = "steps")
castedtotaldata <- dcast(meltedtotaldata, date ~ variable, sum)
hist(castedtotaldata$steps, col="cyan",main = "Total Steps Per Day Histogram",xlab = "Total Steps Per Day")
mean(castedtotaldata$steps)
median(castedtotaldata$steps)
meltedaveragedata <- melt(completedata, id=c("interval"), measure = "steps")
castedaveragedata <- dcast(meltedaveragedata, interval ~ variable, mean)
plot(castedaveragedata$interval,castedaveragedata$steps,type = "l",xlab = "Time Interval", ylab = "Average Steps Across All Days",main = "Average Steps Across All Days Per Time Interval")
castedaveragedata[castedaveragedata$steps == max(castedaveragedata$steps),]$interval
missingdata <- activitydata[is.na(activitydata$steps),]
nrow(missingdata)
filleddata <- missingdata
for (i in 1:nrow(missingdata)) {
filleddata[i,"steps"] <- castedaveragedata[castedaveragedata$interval == filleddata[i,"interval"],]$steps
}
enhanceddata <- rbind(filleddata,completedata)
View(enhanceddata)
meltedenhanceddata <- melt(enhanceddata, id=c("date"), measure = "steps")
castedenhanceddata <- dcast(meltedenhanceddata, date ~ variable, sum)
hist(castedenhanceddata$steps, col="cyan",main = "Total Steps Per Day Histogram",xlab = "Total Steps Per Day")
mean(castedenhanceddata$steps)
median(castedenhanceddata$steps)
test <- weekdays(activitydata$date)
test <- weekdays(as.date(activitydata$date))
View(activitydata)
str(activitydata)
test <- weekdays(as.Date(activitydata$date))
test <- as.data.frame(weekdays(as.Date(activitydata$date)))
View(test)
enhanceddata$daytype <- as.data.frame(weekdays(as.Date(enhanceddata$date)))
View(enhanceddata)
enhanceddata$daytype <- "0"
View(enhanceddata)
for (i in 1:nrow(enhanceddata)) {
enhanceddata[i,"daytype"] <- weekdays(as.Date(enhanceddata[i,]$date))
}
View(enhanceddata)
enhanceddata[enhanceddata$daytype == "Monday",]$daytype <- "weekday"
View(enhanceddata)
enhanceddata[enhanceddata$daytype == "Tuesday",]$daytype <- "weekday"
enhanceddata[enhanceddata$daytype == "Wednesday",]$daytype <- "weekday"
enhanceddata[enhanceddata$daytype == "Thursday",]$daytype <- "weekday"
enhanceddata[enhanceddata$daytype == "Friday",]$daytype <- "weekday"
enhanceddata[enhanceddata$daytype == "Saturday",]$daytype <- "weekend"
enhanceddata[enhanceddata$daytype == "Sunday",]$daytype <- "weekend"
str(enhanceddata$daytype)
factor(enhanceddata$daytype)
str(enhanceddata)
enhanceddata$daytype enhanceddata$daytype <- as.factor("0")
for (i in 1:nrow(enhanceddata)) {
enhanceddata[i,"daytype"] <- weekdays(as.Date(enhanceddata[i,]$date))
}
enhanceddata[enhanceddata$daytype == "Monday",]$daytype <- "weekday"
enhanceddata[enhanceddata$daytype == "Tuesday",]$daytype <- "weekday"
enhanceddata[enhanceddata$daytype == "Wednesday",]$daytype <- "weekday"
enhanceddata[enhanceddata$daytype == "Thursday",]$daytype <- "weekday"
enhanceddata[enhanceddata$daytype == "Friday",]$daytype <- "weekday"
enhanceddata[enhanceddata$daytype == "Saturday",]$daytype <- "weekend"
enhanceddata[enhanceddata$daytype == "Sunday",]$daytype <- "weekend"
enhanceddata$daytype <- as.factor("0")
for (i in 1:nrow(enhanceddata)) {
enhanceddata[i,"daytype"] <- weekdays(as.Date(enhanceddata[i,]$date))
}
enhanceddata[enhanceddata$daytype == "Monday",]$daytype <- "weekday"
enhanceddata[enhanceddata$daytype == "Tuesday",]$daytype <- "weekday"
enhanceddata[enhanceddata$daytype == "Wednesday",]$daytype <- "weekday"
enhanceddata[enhanceddata$daytype == "Thursday",]$daytype <- "weekday"
enhanceddata[enhanceddata$daytype == "Friday",]$daytype <- "weekday"
enhanceddata[enhanceddata$daytype == "Saturday",]$daytype <- "weekend"
enhanceddata[enhanceddata$daytype == "Sunday",]$daytype <- "weekend"
enhanceddata$daytype <- "0"
for (i in 1:nrow(enhanceddata)) {
enhanceddata[i,"daytype"] <- weekdays(as.Date(enhanceddata[i,]$date))
}
enhanceddata[enhanceddata$daytype == "Monday",]$daytype <- "weekday"
enhanceddata[enhanceddata$daytype == "Tuesday",]$daytype <- "weekday"
enhanceddata[enhanceddata$daytype == "Wednesday",]$daytype <- "weekday"
enhanceddata[enhanceddata$daytype == "Thursday",]$daytype <- "weekday"
enhanceddata[enhanceddata$daytype == "Friday",]$daytype <- "weekday"
enhanceddata[enhanceddata$daytype == "Saturday",]$daytype <- "weekend"
enhanceddata[enhanceddata$daytype == "Sunday",]$daytype <- "weekend"
enhanceddata$daytype <- as.factor(enhanceddata$daytype)
str(enhanceddata)
library(lattice)
meltedtypedata <- melt(enhanceddata, id=c("interval","daytype"), measure = "steps")
castedtypedata <- dcast(meltedtypedata, date ~ variable, mean)
castedtypedata <- dcast(meltedtypedata, interval + daytype ~ variable, mean)
View(castedtypedata)
View(castedaveragedata)
View(meltedtypedata)
View(enhanceddata)
View(completedata)
View(enhanceddata)
View(meltedtypedata)
View(castedtypedata)
xyplot(interval ~ steps | daytype,
data = castedtypedata,
type = "l")
xyplot(steps ~ interval | daytype,
data = castedtypedata,
type = "l")
xyplot(steps ~ interval | daytype,data = castedtypedata,type = "l",layout = c(1,2))
plot(castedaveragedata$interval,castedaveragedata$steps,type = "l",xlab = "Time Interval", ylab = "Average Steps Across All Days",main = "Average Steps Across All Days Per Time Interval")
xyplot(steps ~ interval | daytype,data = castedtypedata,type = "l",layout = c(1,2))
activitydata <- read.csv("/activity.csv")
activitydata <- read.csv("activity.csv")
activitydata <- read.csv("/activity.csv")
View(activitydata)
str(activitydata)
activitydata$date <- as.Date(activitydata$date)
str(activitydata)
library(base)
library(reshape2)
setwd("C:/Users/Emobear/Desktop/Coursera R/repdata_2")
raw_data <- read.csv("repdata-data-StormData.csv.bz2")
raw_data$BGN_DATE <- as.Date(raw_data$BGN_DATE, "%m/%d/%Y")
processed_data <- raw_data[,c("BGN_DATE","EVTYPE","FATALITIES","PROPDMG","CROPDMG")]
processed_data$year <- format(processed_data$BGN_DATE, "%Y")
recent_data <- processed_data[processed_data$year > 1999,]
melted_pop_data <- melt(recent_data, id="EVTYPE", measure = "FATALITIES")
casted_pop_data <- dcast(melted_pop_data, EVTYPE ~ variable, sum)
casted_pop_data <- casted_pop_data[order(casted_pop_data$FATALITIES, decreasing = TRUE), ]
top_pop_data <- casted_pop_data[1:3,]
top_pop_data <- droplevels(top_pop_data)
barplot(top_pop_data$FATALITIES,names.arg = top_pop_data$EVTYPE,col = "cyan",xlab = "Event Type", ylab = "Fatalities", main = "Event Types with Most Fatalities Since Year 2000")
recent_data$economic <- recent_data$PROPDMG + recent_data$CROPDMG
melted_econ_data <- melt(recent_data, id="EVTYPE", measure = "economic")
casted_econ_data <- dcast(melted_econ_data, EVTYPE ~ variable, sum)
casted_econ_data <- casted_econ_data[order(casted_econ_data$economic, decreasing = TRUE), ]
casted_econ_data$economic <- casted_econ_data$economic / 1000
top_econ_data <- casted_econ_data[1:3,]
top_econ_data <- droplevels(top_econ_data)
barplot(top_econ_data$economic,names.arg = top_econ_data$EVTYPE,col = "cyan",xlab = "Event Type", ylab = "Economic Damage (in Thousands of Dollars)", main = "Event Types with Most Fatalities Since Year 2000")
barplot(top_pop_data$FATALITIES,names.arg = top_pop_data$EVTYPE,col = "cyan",xlab = "Event Type", ylab = "Fatalities", main = "Event Types with Most Fatalities Since Year 2000")
text(top_pop_data$EVTYPE, top_pop_data$FATALITIES, round(top_pop_data$FATALITIES, 0), cex=1.5, col = "black")
barplot(top_pop_data$FATALITIES,names.arg = top_pop_data$EVTYPE,col = "cyan",xlab = "Event Type", ylab = "Fatalities", main = "Event Types with Most Fatalities Since Year 2000")
text(top_pop_data$EVTYPE, top_pop_data$FATALITIES, top_pop_data$FATALITIES, cex=1.5, col = "black")
text(top_pop_data$EVTYPE, top_pop_data$FATALITIES, , cex=1.5, col = "black")
barplot(top_pop_data$FATALITIES,names.arg = top_pop_data$EVTYPE,col = "cyan",xlab = "Event Type", ylab = "Fatalities", main = "Event Types with Most Fatalities Since Year 2000")
text(top_pop_data$EVTYPE, top_pop_data$FATALITIES, , cex=1.5, col = "black")
barplot(top_pop_data$FATALITIES,names.arg = top_pop_data$EVTYPE,col = "cyan",xlab = "Event Type", ylab = "Fatalities", main = "Event Types with Most Fatalities Since Year 2000")
text(top_pop_data$EVTYPE, top_pop_data$FATALITIES, cex=1.5, col = "black")
barplot(top_pop_data$FATALITIES,names.arg = top_pop_data$EVTYPE,col = "cyan",xlab = "Event Type", ylab = "Fatalities", main = "Event Types with Most Fatalities Since Year 2000")
text(top_pop_data$EVTYPE, top_pop_data$FATALITIES, top_pop_data$FATALITIES, cex=1.5, col = "black")
barplot(top_pop_data$FATALITIES,names.arg = top_pop_data$EVTYPE,col = "cyan",xlab = "Event Type", ylab = "Fatalities", main = "Event Types with Most Fatalities Since Year 2000", ylim = c(0,1500))
text(top_pop_data$EVTYPE, top_pop_data$FATALITIES, top_pop_data$FATALITIES, cex=1.5, col = "black")
View(top_pop_data)
top_pop_data <- top_pop_data[order(top_pop_data$EVTYPE), ]
View(top_pop_data)
top_pop_data <- droplevels(top_pop_data)
barplot(top_pop_data$FATALITIES,names.arg = top_pop_data$EVTYPE,col = "cyan",xlab = "Event Type", ylab = "Fatalities", main = "Event Types with Most Fatalities Since Year 2000", ylim = c(0,1500))
text(top_pop_data$EVTYPE, top_pop_data$FATALITIES, top_pop_data$FATALITIES, cex=1.5, col = "black")
top_pop_data <- casted_pop_data[1:3,]
top_pop_data <- droplevels(top_pop_data)
barplot(top_pop_data$FATALITIES,names.arg = top_pop_data$EVTYPE,col = "cyan",xlab = "Event Type", ylab = "Fatalities", main = "Event Types with Most Fatalities Since Year 2000", ylim = c(0,1500))
text(c(1,2,3), top_pop_data$FATALITIES, top_pop_data$FATALITIES, cex=1.5, col = "black")
text(c(0.5,1.75,3.25), top_pop_data$FATALITIES, top_pop_data$FATALITIES, cex=1.5, col = "black")
text(c(0.75,1.875,3.375), top_pop_data$FATALITIES, top_pop_data$FATALITIES, cex=1.5, col = "black")
barplot(top_pop_data$FATALITIES,names.arg = top_pop_data$EVTYPE,col = "cyan",xlab = "Event Type", ylab = "Fatalities", main = "Event Types with Most Fatalities Since Year 2000", ylim = c(0,1500))
text(c(0.75,1.875,3.375), top_pop_data$FATALITIES, top_pop_data$FATALITIES, cex=1.5, col = "black")
barplot(top_pop_data$FATALITIES,names.arg = top_pop_data$EVTYPE,col = "cyan",xlab = "Event Type", ylab = "Fatalities", main = "Event Types with Most Fatalities Since Year 2000", ylim = c(0,1500))
text(c(0.75,1.875,3.25), top_pop_data$FATALITIES, top_pop_data$FATALITIES, cex=1.5, col = "black")
barplot(top_pop_data$FATALITIES,names.arg = top_pop_data$EVTYPE,col = "cyan",xlab = "Event Type", ylab = "Fatalities", main = "Event Types with Most Fatalities Since Year 2000", ylim = c(0,1500))
text(c(0.75,1.875,3.125), top_pop_data$FATALITIES, top_pop_data$FATALITIES, cex=1.5, col = "black")
text(c(0.75,1.875,3.125), top_pop_data$FATALITIES-1, top_pop_data$FATALITIES, cex=1.5, col = "black")
barplot(top_pop_data$FATALITIES,names.arg = top_pop_data$EVTYPE,col = "cyan",xlab = "Event Type", ylab = "Fatalities", main = "Event Types with Most Fatalities Since Year 2000", ylim = c(0,1500))
text(c(0.75,1.875,3.125), top_pop_data$FATALITIES-1000, top_pop_data$FATALITIES, cex=1.5, col = "black")
barplot(top_pop_data$FATALITIES,names.arg = top_pop_data$EVTYPE,col = "cyan",xlab = "Event Type", ylab = "Fatalities", main = "Event Types with Most Fatalities Since Year 2000", ylim = c(0,1500))
text(c(0.75,1.875,3.125), top_pop_data$FATALITIES-100, top_pop_data$FATALITIES, cex=1.5, col = "black")
barplot(top_pop_data$FATALITIES,names.arg = top_pop_data$EVTYPE,col = "cyan",xlab = "Event Type", ylab = "Fatalities", main = "Event Types with Most Fatalities Since Year 2000", ylim = c(0,1500))
text(c(0.75,1.875,3.125), top_pop_data$FATALITIES-100, top_pop_data$FATALITIES, cex=1.5, col = "black")
recent_data$economic <- recent_data$PROPDMG + recent_data$CROPDMG
melted_econ_data <- melt(recent_data, id="EVTYPE", measure = "economic")
casted_econ_data <- dcast(melted_econ_data, EVTYPE ~ variable, sum)
casted_econ_data <- casted_econ_data[order(casted_econ_data$economic, decreasing = TRUE), ]
casted_econ_data$economic <- casted_econ_data$economic / 1000
top_econ_data <- casted_econ_data[1:3,]
top_econ_data <- droplevels(top_econ_data)
barplot(top_econ_data$economic,names.arg = top_econ_data$EVTYPE,col = "cyan",xlab = "Event Type", ylab = "Economic Damage (in Thousands of Dollars)", main = "Event Types with Most Fatalities Since Year 2000")
barplot(top_econ_data$economic,names.arg = top_econ_data$EVTYPE,col = "cyan",xlab = "Event Type", ylab = "Economic Damage (in Thousands of Dollars)", main = "Event Types with Most Fatalities Since Year 2000")
text(c(0.75,1.875,3.125), top_econ_data$economic-100, top_econ_data$economic, cex=1.5, col = "black")
barplot(top_econ_data$economic,names.arg = top_econ_data$EVTYPE,col = "cyan",xlab = "Event Type", ylab = "Economic Damage (in Thousands of Dollars)", main = "Event Types with Most Fatalities Since Year 2000")
text(c(0.75,1.875,3.125), top_econ_data$economic-100, round(top_econ_data$economic,0), cex=1.5, col = "black")
barplot(top_econ_data$economic,names.arg = top_econ_data$EVTYPE,col = "cyan",xlab = "Event Type", ylab = "Economic Damage (in Thousands of Dollars)", main = "Event Types with Most Fatalities Since Year 2000")
text(c(0.75,1.875,3.125), top_econ_data$economic-100, round(top_econ_data$economic,1), cex=1.5, col = "black")
test <- processed_data[order(processed_data$CROPDMG, decreasing = TRUE), ]
View(test)
View(raw_data)
processed_data <- raw_data[,c("BGN_DATE","EVTYPE","FATALITIES","PROPDMG","PROPDMGEXP","CROPDMG","CROPDMGEXP")]
View(processed_data)
str(processed_data$PROPDMGEXP)
levels(processed_data$PROPDMGEXP)
processed_data$year <- format(processed_data$BGN_DATE, "%Y")
recent_data <- processed_data[processed_data$year > 1999,]
melted_pop_data <- melt(recent_data, id="EVTYPE", measure = "FATALITIES")
casted_pop_data <- dcast(melted_pop_data, EVTYPE ~ variable, sum)
casted_pop_data <- casted_pop_data[order(casted_pop_data$FATALITIES, decreasing = TRUE), ]
top_pop_data <- casted_pop_data[1:3,]
top_pop_data <- droplevels(top_pop_data)
barplot(top_pop_data$FATALITIES,names.arg = top_pop_data$EVTYPE,col = "cyan",xlab = "Event Type", ylab = "Fatalities", main = "Event Types with Most Fatalities Since Year 2000", ylim = c(0,1500))
text(c(0.75,1.875,3.125), top_pop_data$FATALITIES-100, top_pop_data$FATALITIES, cex=1.5, col = "black")
recent_data$economic <- recent_data$PROPDMG + recent_data$CROPDMG
melted_econ_data <- melt(recent_data, id="EVTYPE", measure = "economic")
casted_econ_data <- dcast(melted_econ_data, EVTYPE ~ variable, sum)
casted_econ_data <- casted_econ_data[order(casted_econ_data$economic, decreasing = TRUE), ]
casted_econ_data$economic <- casted_econ_data$economic / 1000
top_econ_data <- casted_econ_data[1:3,]
top_econ_data <- droplevels(top_econ_data)
barplot(top_econ_data$economic,names.arg = top_econ_data$EVTYPE,col = "cyan",xlab = "Event Type", ylab = "Economic Damage (in Thousands of Dollars)", main = "Event Types with Most Fatalities Since Year 2000")
text(c(0.75,1.875,3.125), top_econ_data$economic-100, round(top_econ_data$economic,1), cex=1.5, col = "black")
levels(recent_data$PROPDMGEXP)
recent_data <- droplevels(recent_data)
levels(recent_data$PROPDMGEXP)
View(recent_data)
test <- recent_data[recent_data == 0,]
View(test)
test <- recent_data[recent_data$PROPDMGEXP == 0,]
View(test)
test <- recent_data[recent_data$CROPDMGEXP == 0,]
View(test)
test <- recent_data[recent_data$PROPDMGEXP == 0,]
View(test)
recent_data$PROPDMG <- ifelse(recent_data$PROPDMGEXP == "K",recent_data$PROPDMG * 1000,0)
View(recent_data)
recent_data <- processed_data[processed_data$year > 1999,]
recent_data <- droplevels(recent_data)
recent_data$PROPDMG <- ifelse(recent_data$PROPDMGEXP == "K",
recent_data$PROPDMG * 1000,ifelse(recent_data$PROPDMGEXP == "M",
recent_data$PROPDMG * 1000000,ifelse(recent_data$PROPDMGEXP == "B",
recent_data$PROPDMG * 1000000000,recent_data$PROPDMG)))
View(recent_data)
levels(recent_data$CROPDMGEXP)
recent_data$CROPDMG <- ifelse(recent_data$CROPDMGEXP == "K",
recent_data$CROPDMG * 1000,ifelse(recent_data$CROPDMGEXP == "M",
recent_data$CROPDMG * 1000000,ifelse(recent_data$CROPDMGEXP == "B",
recent_data$CROPDMG * 1000000000,recent_data$CROPDMG)))
recent_data <- processed_data[processed_data$year > 1999,]
recent_data <- droplevels(recent_data)
melted_pop_data <- melt(recent_data, id="EVTYPE", measure = "FATALITIES")
casted_pop_data <- dcast(melted_pop_data, EVTYPE ~ variable, sum)
casted_pop_data <- casted_pop_data[order(casted_pop_data$FATALITIES, decreasing = TRUE), ]
top_pop_data <- casted_pop_data[1:3,]
top_pop_data <- droplevels(top_pop_data)
barplot(top_pop_data$FATALITIES,names.arg = top_pop_data$EVTYPE,col = "cyan",xlab = "Event Type", ylab = "Fatalities", main = "Event Types with Most Fatalities Since Year 2000", ylim = c(0,1500))
text(c(0.75,1.875,3.125), top_pop_data$FATALITIES-100, top_pop_data$FATALITIES, cex=1.5, col = "black")
recent_data$PROPDMG <- ifelse(recent_data$PROPDMGEXP == "K",
recent_data$PROPDMG * 1000,ifelse(recent_data$PROPDMGEXP == "M",
recent_data$PROPDMG * 1000000,ifelse(recent_data$PROPDMGEXP == "B",
recent_data$PROPDMG * 1000000000,recent_data$PROPDMG)))
recent_data$CROPDMG <- ifelse(recent_data$CROPDMGEXP == "K",
recent_data$CROPDMG * 1000,ifelse(recent_data$CROPDMGEXP == "M",
recent_data$CROPDMG * 1000000,ifelse(recent_data$CROPDMGEXP == "B",
recent_data$CROPDMG * 1000000000,recent_data$CROPDMG)))
recent_data$economic <- recent_data$PROPDMG + recent_data$CROPDMG
melted_econ_data <- melt(recent_data, id="EVTYPE", measure = "economic")
casted_econ_data <- dcast(melted_econ_data, EVTYPE ~ variable, sum)
casted_econ_data <- casted_econ_data[order(casted_econ_data$economic, decreasing = TRUE), ]
casted_econ_data$economic <- casted_econ_data$economic / 1000
top_econ_data <- casted_econ_data[1:3,]
top_econ_data <- droplevels(top_econ_data)
barplot(top_econ_data$economic,names.arg = top_econ_data$EVTYPE,col = "cyan",xlab = "Event Type", ylab = "Economic Damage (in Thousands of Dollars)", main = "Event Types with Most Fatalities Since Year 2000")
text(c(0.75,1.875,3.125), top_econ_data$economic-100, round(top_econ_data$economic,1), cex=1.5, col = "black")
melted_econ_data <- melt(recent_data, id="EVTYPE", measure = "economic")
casted_econ_data <- dcast(melted_econ_data, EVTYPE ~ variable, sum)
casted_econ_data <- casted_econ_data[order(casted_econ_data$economic, decreasing = TRUE), ]
casted_econ_data$economic <- casted_econ_data$economic / 1000000000
top_econ_data <- casted_econ_data[1:3,]
top_econ_data <- droplevels(top_econ_data)
barplot(top_econ_data$economic,names.arg = top_econ_data$EVTYPE,col = "cyan",xlab = "Event Type", ylab = "Economic Damage (in Thousands of Dollars)", main = "Event Types with Most Fatalities Since Year 2000")
text(c(0.75,1.875,3.125), top_econ_data$economic-100, round(top_econ_data$economic,1), cex=1.5, col = "black")
barplot(top_econ_data$economic,names.arg = top_econ_data$EVTYPE,col = "cyan",xlab = "Event Type", ylab = "Economic Damage (in Billions of Dollars)", main = "Event Types with Most Economic Damage Since Year 2000")
text(c(0.75,1.875,3.125), top_econ_data$economic-10, round(top_econ_data$economic,1), cex=1.5, col = "black")
